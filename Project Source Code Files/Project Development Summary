This is my thought process on how I created this project.

For this project, I started by thinking about how a real elevator works and how to model that behavior in code. I broke the problem down into two main parts: representing individual user requests and managing the elevator’s operation. I created a Request class to store all the key details like the time of the request, the floors involved, and the direction of travel. Then I built an Elevator class that keeps track of its current floor, movement direction, and two queues—one for upward requests and one for downward requests. To handle different scenarios, I made sure the system could support both a single-elevator and multi-elevator setup, with logic that assigns each new request to the best available elevator. The simulation runs over a series of time steps, generating random requests, moving elevators, and recording waiting times. Finally, I added clear output and calculated the average waiting time at the end, making sure the program was easy to follow and efficient.
